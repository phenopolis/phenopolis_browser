# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.variants import Variants  # noqa: F401,E501
from swagger_server import util


class PatientVariants(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, homozygous: Variants=None, heterozygous: Variants=None):  # noqa: E501
        """PatientVariants - a model defined in Swagger

        :param homozygous: The homozygous of this PatientVariants.  # noqa: E501
        :type homozygous: Variants
        :param heterozygous: The heterozygous of this PatientVariants.  # noqa: E501
        :type heterozygous: Variants
        """
        self.swagger_types = {
            'homozygous': Variants,
            'heterozygous': Variants
        }

        self.attribute_map = {
            'homozygous': 'homozygous',
            'heterozygous': 'heterozygous'
        }

        self._homozygous = homozygous
        self._heterozygous = heterozygous

    @classmethod
    def from_dict(cls, dikt) -> 'PatientVariants':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Patient_variants of this PatientVariants.  # noqa: E501
        :rtype: PatientVariants
        """
        return util.deserialize_model(dikt, cls)

    @property
    def homozygous(self) -> Variants:
        """Gets the homozygous of this PatientVariants.


        :return: The homozygous of this PatientVariants.
        :rtype: Variants
        """
        return self._homozygous

    @homozygous.setter
    def homozygous(self, homozygous: Variants):
        """Sets the homozygous of this PatientVariants.


        :param homozygous: The homozygous of this PatientVariants.
        :type homozygous: Variants
        """

        self._homozygous = homozygous

    @property
    def heterozygous(self) -> Variants:
        """Gets the heterozygous of this PatientVariants.


        :return: The heterozygous of this PatientVariants.
        :rtype: Variants
        """
        return self._heterozygous

    @heterozygous.setter
    def heterozygous(self, heterozygous: Variants):
        """Sets the heterozygous of this PatientVariants.


        :param heterozygous: The heterozygous of this PatientVariants.
        :type heterozygous: Variants
        """

        self._heterozygous = heterozygous
