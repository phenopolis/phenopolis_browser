# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.variant_filters_gnomad_af import VariantFiltersGnomadAf  # noqa: F401,E501
from swagger_server import util


class VariantFiltersGnomad(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, include_null: bool=None, an: float=None, af: VariantFiltersGnomadAf=None, hf: VariantFiltersGnomadAf=None):  # noqa: E501
        """VariantFiltersGnomad - a model defined in Swagger

        :param include_null: The include_null of this VariantFiltersGnomad.  # noqa: E501
        :type include_null: bool
        :param an: The an of this VariantFiltersGnomad.  # noqa: E501
        :type an: float
        :param af: The af of this VariantFiltersGnomad.  # noqa: E501
        :type af: VariantFiltersGnomadAf
        :param hf: The hf of this VariantFiltersGnomad.  # noqa: E501
        :type hf: VariantFiltersGnomadAf
        """
        self.swagger_types = {
            'include_null': bool,
            'an': float,
            'af': VariantFiltersGnomadAf,
            'hf': VariantFiltersGnomadAf
        }

        self.attribute_map = {
            'include_null': 'include_null',
            'an': 'an',
            'af': 'af',
            'hf': 'hf'
        }

        self._include_null = include_null
        self._an = an
        self._af = af
        self._hf = hf

    @classmethod
    def from_dict(cls, dikt) -> 'VariantFiltersGnomad':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VariantFilters_gnomad of this VariantFiltersGnomad.  # noqa: E501
        :rtype: VariantFiltersGnomad
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_null(self) -> bool:
        """Gets the include_null of this VariantFiltersGnomad.


        :return: The include_null of this VariantFiltersGnomad.
        :rtype: bool
        """
        return self._include_null

    @include_null.setter
    def include_null(self, include_null: bool):
        """Sets the include_null of this VariantFiltersGnomad.


        :param include_null: The include_null of this VariantFiltersGnomad.
        :type include_null: bool
        """

        self._include_null = include_null

    @property
    def an(self) -> float:
        """Gets the an of this VariantFiltersGnomad.

        Some variants on gnomad has very few available alleles. If AN < an, treat its af as null  # noqa: E501

        :return: The an of this VariantFiltersGnomad.
        :rtype: float
        """
        return self._an

    @an.setter
    def an(self, an: float):
        """Sets the an of this VariantFiltersGnomad.

        Some variants on gnomad has very few available alleles. If AN < an, treat its af as null  # noqa: E501

        :param an: The an of this VariantFiltersGnomad.
        :type an: float
        """

        self._an = an

    @property
    def af(self) -> VariantFiltersGnomadAf:
        """Gets the af of this VariantFiltersGnomad.


        :return: The af of this VariantFiltersGnomad.
        :rtype: VariantFiltersGnomadAf
        """
        return self._af

    @af.setter
    def af(self, af: VariantFiltersGnomadAf):
        """Sets the af of this VariantFiltersGnomad.


        :param af: The af of this VariantFiltersGnomad.
        :type af: VariantFiltersGnomadAf
        """

        self._af = af

    @property
    def hf(self) -> VariantFiltersGnomadAf:
        """Gets the hf of this VariantFiltersGnomad.


        :return: The hf of this VariantFiltersGnomad.
        :rtype: VariantFiltersGnomadAf
        """
        return self._hf

    @hf.setter
    def hf(self, hf: VariantFiltersGnomadAf):
        """Sets the hf of this VariantFiltersGnomad.


        :param hf: The hf of this VariantFiltersGnomad.
        :type hf: VariantFiltersGnomadAf
        """

        self._hf = hf
